import React, {Component} from 'react';
import {connect} from 'react-redux';
import {selectBook} from '../actions/index'; //action creator
import {bindActionCreators} from 'redux'; //makes sure that the action that is generated by the action creator 
											//ends up flowing through all of the reducers in the application


class BookList extends Component {

	renderList() {
		return this.props.books.map((book) => { //map through this.props.book to display title name on a list item
			return (
				<li 
					onClick={ () => this.props.selectBook(book)}
					key={book.title} 
					className = "list-group-item">{book.title} 
				</li> //need to add key because it is a list
			)
		})
	}
	render(){
		return (
			<ul className='list-group col-sm-4'>
				{this.renderList()} 
			</ul>

		)
	}
}

function mapStateToProps(state){
	//what is returned will show up as props inside of BookList

	return {
		books: state.books
	}
}

//Anything returned from this function will end up as props on the BookList container
function mapDispatchToProps(dispatch) {
	//Whenever selectBook is called, the result should be passed to all of our reducers
	return bindActionCreators({selectBook: selectBook}, dispatch);
}

//Promote BookList from just a component to a container. It needs to know about this new dispatch method, 
//selectBook. Make it available as a prop.
export default connect(mapStateToProps, mapDispatchToProps)(BookList);